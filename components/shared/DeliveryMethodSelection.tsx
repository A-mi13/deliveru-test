"use client";

import React, { useState } from "react";
import PickupPointsMap from "./PickupPointsMap"; // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–∞—Ä—Ç—ã —Å–∞–º–æ–≤—ã–≤–æ–∑–∞
import AddressList from "./AddressList"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
import { useCart } from "@/components/shared/CartContext"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã

const deliveryMethods = [
  {
    id: "pickup",
    title: "–°–∞–º–æ–≤—ã–≤–æ–∑",
    image: "/pickup.png", // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  },
  {
    id: "courier",
    title: "–ö—É—Ä—å–µ—Ä–æ–º",
    image: "/courier.png", // –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
  },
  {
    id: "transport",
    title: "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–µ–π",
    image: null, // –ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  },
];

const deliveryTimes = [
  { value: "asap", label: "–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ" },
  { value: "12-14", label: "12:00 - 14:00" },
  { value: "14-16", label: "14:00 - 16:00" },
  { value: "16-18", label: "16:00 - 18:00" },
  { value: "18-20", label: "18:00 - 20:00" },
  { value: "20-22", label: "20:00 - 22:00" },
];

const DeliveryMethodSelection: React.FC<{ onSelect: (method: string) => void }> = ({ onSelect }) => {
  const { cart, totalPrice, deliveryPrice, discount, freeShipping } = useCart();
  const [deliveryMethod, setDeliveryMethod] = useState("pickup");
  const [deliveryTime, setDeliveryTime] = useState("asap");
  const [showTimeDropdown, setShowTimeDropdown] = useState(false);
  const [payment, setPayment] = useState("–°–ü–ë");
  const [comment, setComment] = useState("");
  const [addresses, setAddresses] = useState([
    { id: 1, address: "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å, —É–ª. 50 –ª–µ—Ç –í–õ–ö–°–ú, 113" },
    { id: 2, address: "–°—Ç–∞–≤—Ä–æ–ø–æ–ª—å, –ø—Ä. –ö—É–ª–∞–∫–æ–≤–∞, 15" },
  ]);
  const [selectedAddress, setSelectedAddress] = useState(""); // –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

  const handleMethodSelect = (methodId: string) => {
    setDeliveryMethod(methodId);
  };

  const handleDeleteAddress = (id: number) => {
    setAddresses(addresses.filter((addr) => addr.id !== id));
  };

  const handleEditAddress = (id: number, newAddress: string) => {
    setAddresses(
      addresses.map((addr) => (addr.id === id ? { ...addr, address: newAddress } : addr))
    );
  };

  const handleAddAddress = (newAddress: string) => {
    setAddresses([...addresses, { id: Date.now(), address: newAddress }]);
  };

  const handleSelectAddress = (address: string) => {
    setSelectedAddress(address); // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å
  };

  const handleTimeChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    setDeliveryTime(e.target.value);
    setShowTimeDropdown(false);
  };

  const finalPrice = totalPrice + (freeShipping ? 0 : deliveryPrice) - discount;

  return (
    <div className="max-w-md mx-auto">
      <h2 className="text-xl font-semibold mb-4">–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è</h2>

      {/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ */}
      <div className="flex gap-2 mb-4">
        {deliveryMethods.map((method) => (
          <div
            key={method.id}
            className={`w-[124px] h-[173px] p-4 rounded-lg shadow-md cursor-pointer flex flex-col items-center justify-between transition-all ${deliveryMethod === method.id
                ? "bg-[#70B9BE] text-white"
                : "bg-gray-100 text-gray-800"
              } ${method.id === "transport" ? "opacity-50 cursor-not-allowed" : ""}`}
            onClick={() => handleMethodSelect(method.id)}
          >
            <div className="text-sm font-semibold text-center">{method.title}</div>
            {method.image ? (
              <img src={method.image} alt={method.title} className="w-[94px] h-[127px] object-cover rounded-md" />
            ) : (
              <div className="w-[94px] h-[127px] flex items-center justify-center text-gray-500">üöõ</div>
            )}
          </div>
        ))}
      </div>

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ */}
      <div className="p-4 bg-white rounded-lg shadow-md">
        <h3 className="text-lg font-bold text-gray-800 mb-4">
          –°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è: {deliveryMethods.find((method) => method.id === deliveryMethod)?.title}
        </h3>

        {deliveryMethod === "pickup" && <PickupPointsMap />}
        {deliveryMethod === "courier" && (
          <>
            <AddressList
              addresses={addresses}
              onDelete={handleDeleteAddress}
              onEdit={handleEditAddress}
              onAdd={handleAddAddress}
              onSelect={handleSelectAddress} // –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∞–¥—Ä–µ—Å–∞
            />
            <div className="mb-4">
              <label className="block text-gray-600 mb-1">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</label>
              <input
                type="text"
                value={selectedAddress}
                onChange={(e) => setSelectedAddress(e.target.value)}
                className="w-full p-2 border rounded-lg"
              />
            </div>
          </>
        )}
        {deliveryMethod === "transport" && (
          <div className="text-gray-600">
            <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é:</p>
          </div>
        )}
      </div>

      {/* –í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ */}
      <div className="mb-4">
        <label className="block text-gray-600 mb-1">–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏</label>
        <div className="flex gap-2">
          <button
            className={`flex-1 p-2 border rounded-lg ${deliveryTime === "asap" ? "border-teal-500 bg-teal-100" : "border-gray-300"
              }`}
            onClick={() => setDeliveryTime("asap")}
          >
            –ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ
          </button>
          <button
            className={`flex-1 p-2 border rounded-lg ${deliveryTime === "12-14" ? "border-teal-500 bg-teal-100" : "border-gray-300"
              }`}
            onClick={() => setDeliveryTime("12-14")}
          >
            12:00 - 14:00
          </button>
          <button
            className={`flex-1 p-2 border rounded-lg ${deliveryTime !== "asap" && deliveryTime !== "12-14" ? "border-teal-500 bg-teal-100" : "border-gray-300"
              }`}
            onClick={() => setShowTimeDropdown(!showTimeDropdown)}
          >
            {deliveryTime !== "asap" && deliveryTime !== "12-14"
              ? deliveryTimes.find((time) => time.value === deliveryTime)?.label
              : "–î—Ä—É–≥–æ–µ –≤—Ä–µ–º—è"}
          </button>
        </div>
        {showTimeDropdown && (
          <select
            className="w-full p-2 border rounded-lg mt-2"
            onChange={handleTimeChange}
            value={deliveryTime}
          >
            {deliveryTimes.map((time) => (
              <option key={time.value} value={time.value}>
                {time.label}
              </option>
            ))}
          </select>
        )}
      </div>

      {/* –û–ø–ª–∞—Ç–∞ */}
      <div className="mb-4">
        <label className="block text-gray-600 mb-1">–û–ø–ª–∞—Ç–∞</label>
        <div className="flex gap-2">
          <button
            className={`flex-1 p-2 border rounded-lg ${payment === "–°–ü–ë" ? "border-teal-500 bg-teal-100" : "border-gray-300"
              }`}
            onClick={() => setPayment("–°–ü–ë")}
          >
            –°–ü–ë
          </button>
          <button
            className={`flex-1 p-2 border rounded-lg ${payment === "–ö–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏" ? "border-teal-500 bg-teal-100" : "border-gray-300"
              }`}
            onClick={() => setPayment("–ö–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏")}
          >
            –ö–∞—Ä—Ç–æ–π –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
          </button>
          <button
            className={`flex-1 p-2 border rounded-lg ${payment === "–ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É" ? "border-teal-500 bg-teal-100" : "border-gray-300"
              }`}
            onClick={() => setPayment("–ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É")}
          >
            –ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É
          </button>
        </div>
      </div>

      {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É */}
      <div className="mb-4">
        <label className="block text-gray-600 mb-1">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É</label>
        <textarea
          value={comment}
          onChange={(e) => setComment(e.target.value)}
          className="w-full p-2 border rounded-lg"
          rows={3}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π..."
        />
      </div>

      {/* –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ */}
      <div className="mb-4">
        <div className="flex justify-between text-lg font-semibold">
          <span>–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞</span>
          <span>{totalPrice} ‚ÇΩ</span>
        </div>
        <div className="flex justify-between text-gray-500">
          <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
          <span>{freeShipping ? "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ" : `${deliveryPrice} ‚ÇΩ`}</span>
        </div>
        {discount > 0 && (
          <div className="flex justify-between text-gray-500">
            <span>–°–∫–∏–¥–∫–∞</span>
            <span>-{discount} ‚ÇΩ</span>
          </div>
        )}
        <div className="flex justify-between font-bold">
          <span>–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:</span>
          <span>{finalPrice} ‚ÇΩ</span>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞ */}
      <button className="w-full bg-teal-500 text-white py-3 rounded-lg text-lg">
        –ó–∞–∫–∞–∑–∞—Ç—å
      </button>
    </div>
  );
};

export default DeliveryMethodSelection;